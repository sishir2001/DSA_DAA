{
    // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "CPPSnippetDefault": {
        "prefix": "cpp_snippet_default",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l,l> p_l;",
            "typedef pair<ul,ul> p_ul;",
            "typedef pair<ll,ll> p_ll;",
            "typedef pair<ull,ull> p_ull;",
            "typedef pair<int,int> p_int;",
            "typedef pair<uint,uint> p_uint;",

            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F first",
            "#define S second",
            "#define PB push_back // for vector",
            "#define PPB pop_back // for vector",
            "#define mod 1000000007 // 1e9+7",
            "#define deb(x) cout << #x << \" = \"<<x<<\"\\n\" // for debugging",
            "#define deb2(x,y) cout << #x << \" = \"<<x << \" , \" << #y << \" = \" << y <<\"\\n\" // for debugging ",
            "#define FOR(a,end,start) for(int (a) = (start);(a) <(end);(a)++) // regular for loop",
            "#define FOR_REV(a,end,start) for(int (a) = (end)-1;(a) >= (start);(a)--) // regular for loop decreasing",
            "",
            "int main(){",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    int T;",
            "    cin >> T;",
            "    while(T){",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            ""
        ],
        "description": "CPPSnippetDefault"
    },
    "CPPSnippetArraysDefault": {
        "prefix": "cpp_snippet_arrays_default",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l,l> p_l;",
            "typedef pair<ul,ul> p_ul;",
            "typedef pair<ll,ll> p_ll;",
            "typedef pair<ull,ull> p_ull;",
            "typedef pair<int,int> p_int;",
            "typedef pair<uint,uint> p_uint;",

            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F first",
            "#define S second",
            "#define PB push_back // for vector",
            "#define PPB pop_back // for vector",
            "#define mod 1000000007 // 1e9+7",
            "#define deb(x) cout << #x << \" = \"<<x<<\"\\n\" // for debugging",
            "#define deb2(x,y) cout << #x << \" = \"<<x << \" , \" << #y << \" = \" << y <<\"\\n\" // for debugging ",
            "#define FOR(a,end,start) for(int (a) = (start);(a) <(end);(a)++) // regular for loop",
            "#define FOR_REV(a,end,start) for(int (a) = (end)-1;(a) >= (start);(a)--) // regular for loop decreasing",
            "",
            "int main(){",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    int T,n;",
            "    cin >> T;",
            "    while(T){",
            "        cin >> n;",
            "        int *a = new int[n];",
            "        FOR(i,n,0){",
            "            cin >> a[i];",
            "        }",
            "        delete []a;",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            ""
        ],
        "description": "CPPSnippetArraysDefault"
    },
    "CPPSnippetVI": {
        "prefix": "cppsnippet_snippet_vi",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l,l> p_l;",
            "typedef pair<ul,ul> p_ul;",
            "typedef pair<ll,ll> p_ll;",
            "typedef pair<ull,ull> p_ull;",
            "typedef pair<int,int> p_int;",
            "typedef pair<uint,uint> p_uint;",

            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F first",
            "#define S second",
            "#define PB push_back // for vector",
            "#define PPB pop_back // for vector",
            "#define mod 1000000007 // 1e9+7",
            "#define deb(x) cout << #x << \" = \"<<x<<\"\\n\" // for debugging",
            "#define deb2(x,y) cout << #x << \" = \"<<x << \" , \" << #y << \" = \" << y <<\"\\n\" // for debugging ",
            "#define FOR(a,end,start) for(int (a) = (start);(a) <(end);(a)++) // regular for loop",
            "#define FOR_REV(a,end,start) for(int (a) = (end)-1;(a) >= (start);(a)--) // regular for loop decreasing",
            "",
            "int main(){",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    int T,n;",
            "    cin >> T;",
            "    while(T){",
            "        cin >> n;",
            "        v_int nums(n); // vector",
            "        FOR(i,n,0){",
            "            cin >> nums[i];",
            "        }",
            "        nums.clear();",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            "",
            ""
        ],
        "description": "CPPSnippetVI"
    },
    "CPPSnippetVLL": {
        "prefix": "cppsnippet_snippet_vll",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l,l> p_l;",
            "typedef pair<ul,ul> p_ul;",
            "typedef pair<ll,ll> p_ll;",
            "typedef pair<ull,ull> p_ull;",
            "typedef pair<int,int> p_int;",
            "typedef pair<uint,uint> p_uint;",
            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F first",
            "#define S second",
            "#define PB push_back // for vector",
            "#define PPB pop_back // for vector",
            "#define mod 1000000007 // 1e9+7",
            "#define deb(x) cout << #x << \" = \"<<x<<\"\\n\" // for debugging",
            "#define deb2(x,y) cout << #x << \" = \"<<x << \" , \" << #y << \" = \" << y <<\"\\n\" // for debugging ",
            "#define FOR(a,end,start) for(ll (a) = (start);(a) <(end);(a)++) // regular for loop",
            "#define FOR_REV(a,end,start) for(ll (a) = (end)-1;(a) >= (start);(a)--) // regular for loop decreasing",
            "",
            "int main(){",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    ll T,n;",
            "    cin >> T;",
            "    while(T){",
            "        cin >> n;",
            "        v_ll nums(n); // vector",
            "        FOR(i,n,0){",
            "            cin >> nums[i];",
            "        }",
            "        nums.clear();",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            "",
            "",
            ""
        ],
        "description": "CPPSnippetVLL"
    },
    "CPPArrayLL": {
        "prefix": "cpp_arrays_ll",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l,l> p_l;",
            "typedef pair<ul,ul> p_ul;",
            "typedef pair<ll,ll> p_ll;",
            "typedef pair<ull,ull> p_ull;",
            "typedef pair<int,int> p_int;",
            "typedef pair<uint,uint> p_uint;",
            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F first",
            "#define S second",
            "#define PB push_back // for vector",
            "#define PPB pop_back // for vector",
            "#define mod 1000000007 // 1e9+7",
            "#define deb(x) cout << #x << \" = \"<<x<<\"\\n\" // for debugging",
            "#define deb2(x,y) cout << #x << \" = \"<<x << \" , \" << #y << \" = \" << y <<\"\\n\" // for debugging ",
            "#define FOR(a,end,start) for(ll (a) = (start);(a) <(end);(a)++) // regular for loop",
            "#define FOR_REV(a,end,start) for(ll (a) = (end)-1;(a) >= (start);(a)--) // regular for loop decreasing",
            "",
            "int main(){",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    ll T,n;",
            "    cin >> T;",
            "    while(T){",
            "        cin >> n;",
            "        ll *a = new ll[n];",
            "        FOR(i,n,0){",
            "            cin >> a[i];",
            "        }",
            "        delete []a;",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            "",
            ""
        ],
        "description": "CPPArrayLL"
    },
    "CPP_FILE_IO": {
        "prefix": "cppFileIO",
        "body": [
            "#ifndef ONLINE_JUDGE",
            "  freopen(\"input.txt\",\"r\",stdin);",
            "  freopen(\"output.txt\",\"w\",stdout);",
            "#endif"
        ],
        "description": "CPP_FILE_IO"
    },
    "default matrix": {
        "prefix": "cpp_matrix_ll",
        "body": [
            "#include<bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l,l> p_l;",
            "typedef pair<ul,ul> p_ul;",
            "typedef pair<ll,ll> p_ll;",
            "typedef pair<ull,ull> p_ull;",
            "typedef pair<int,int> p_int;",
            "typedef pair<uint,uint> p_uint;",
            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F first",
            "#define S second",
            "#define PB push_back // for vector",
            "#define PPB pop_back // for vector",
            "#define mod 1000000007 // 1e9+7",
            "#define deb(x) cout << #x << \" = \"<<x<<\"\\n\" // for debugging",
            "#define deb2(x,y) cout << #x << \" = \"<<x << \" , \" << #y << \" = \" << y <<\"\\n\" // for debugging ",
            "#define FOR(a,end,start) for(ll (a) = (start);(a) <(end);(a)++) // regular for loop",
            "#define FOR_REV(a,end,start) for(ll (a) = (end)-1;(a) >= (start);(a)--) // regular for loop decreasing",
            "",
            "void print_matrix(vector<v_ll> &matrix);",
            "",
            "int main(){",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    ll T, n, m;",
            "    cin >> T;",
            "    while (T) {",
            "        cin >> n >> m;",
            "        // n rows and m cols",
            "        vector<v_ll> matrix(n, v_ll(m, 0));  // 2d matrix",
            "        FOR(i, n, 0) {",
            "            FOR(j, m, 0) { cin >> matrix[i][j]; }",
            "        }",
            "        matrix.clear();",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            "",
            "void print_matrix(vector<v_ll> &matrix){",
            "    ll n = matrix.size(),m = matrix[0].size();",
            "    FOR(i,n,0){",
            "        FOR(j,m,0){",
            "            cout << matrix[i][j] << \" \";",
            "        }",
            "        NXT_LINE;",
            "    }",
            "}"
        ],
        "description": "default matrix"
    },
    "matrix print ll": {
        "prefix": "cpp_print_matrix_ll",
        "body": [
            "void print_matrix(vector<v_ll> &matrix);",
            "void print_matrix(vector<v_ll> &matrix){",
            "    ll n = matrix.size(),m = matrix[0].size();",
            "    FOR(i,n,0){",
            "        FOR(j,m,0){",
            "            cout << matrix[i][j] << \" \";",
            "        }",
            "        NXT_LINE;",
            "    }",
            "}"
        ],
        "description": "matrix print ll"
    },
    "prefix matrix sum": {
        "prefix": "cpp_matrix_prefix_sum",
        "body": [
            "void prefix_sum_matrix(vector<v_ll> &matrix);",
            "void prefix_sum_matrix(vector<v_ll> &matrix) {",
            "    // !T(N) = O(N^2)",
            "    // !S(N) = O(1)",
            "    ll rows = matrix.size(), cols = matrix[0].size();",
            "    FOR(i, rows, 0) {",
            "        FOR(j, cols, 0) {",
            "            if (i == 0 || j == 0) {",
            "                if (i == 0 && j == 0) {",
            "                    continue;",
            "                } else if (i == 0) {",
            "                    matrix[i][j] += matrix[i][j - 1];",
            "                } else {",
            "                    matrix[i][j] += matrix[i - 1][j];",
            "                }",
            "            } else {",
            "                matrix[i][j] = matrix[i][j] + matrix[i - 1][j] +",
            "                               matrix[i][j - 1] - matrix[i - 1][j - 1];",
            "            }",
            "        }",
            "    }",
            "}"
        ],
        "description": "prefix matrix sum"
    },
    "Fibonacci LogN": {
        "prefix": "cpp_fibo_logn",
        "body": [
            "p_ll fibonacci(ll n);",
            "p_ll fibonacci(ll n) {",
            "    // !T(N) = O(logN)",
            "    // !S(N) = O(1)",
            "    p_ll res(0, 0);",
            "    if (n == 0) {",
            "        res.first = 0;",
            "        res.second = 1;",
            "        return res;",
            "    }",
            "    if (n == 1) {",
            "        res.first = 1;",
            "        res.second = 1;",
            "        return res;",
            "    }",
            "",
            "    p_ll sub_res = fibonacci(n / 2);",
            "    if ((n & 1) == 0) {",
            "        res.first = sub_res.first * (2 * sub_res.second - sub_res.first);",
            "        res.second =",
            "            sub_res.first * sub_res.first + sub_res.second * sub_res.second;",
            "    } else {",
            "        res.first =",
            "            sub_res.first * sub_res.first + sub_res.second * sub_res.second;",
            "        res.second = sub_res.second * (2 * sub_res.first + sub_res.second);",
            "    }",
            "    return res;",
            "}"
        ],
        "description": "Fibonacci LogN"
    },
    "Print Vector": {
        "prefix": "cpp_print_vector",
        "body": [
            "void print_vector(v_ll &nums);",
            "void print_vector(v_ll &nums) {",
            "    for (auto i : nums) {",
            "        cout << i << \" \";",
            "    }",
            "    NXT_LINE;",
            "}"
        ],
        "description": "Print Vector"
    },
    "Merge Sort": {
        "prefix": "cpp_merge_sort",
        "body": [
            "void merge(v_ll &nums, ll l, ll m, ll r);",
            "void merge_sort(v_ll &nums, ll l, ll r);",
            "void merge(v_ll &nums, ll l, ll m, ll r) {",
            "    //! T(N) = O(N)",
            "    //! S(N) = O(N)",
            "    v_ll a, b;",
            "    FOR(i, m + 1, l) { a.PB(nums[i]); }",
            "    FOR(i, r + 1, m + 1) { b.PB(nums[i]); }",
            "    ll i = l, j = m + 1, k = l;",
            "    while (i <= m && j <= r) {",
            "        if (a[i - l] <= b[j - m - 1]) {",
            "            nums[k++] = a[i - l];",
            "            i++;",
            "        } else {",
            "            nums[k++] = b[j - m - 1];",
            "            j++;",
            "        }",
            "    }",
            "    while (i <= m) {",
            "        nums[k++] = a[i - l];",
            "        i++;",
            "    }",
            "    while (j <= r) {",
            "        nums[k++] = b[j - m - 1];",
            "        j++;",
            "    }",
            "    return;",
            "}",
            "",
            "void merge_sort(v_ll &nums, ll l, ll r) {",
            "    if (l >= r)",
            "        return;",
            "    ll m = (l + r) >> 1;",
            "    merge_sort(nums, l, m);",
            "    merge_sort(nums, m + 1, r);",
            "    merge(nums, l, m, r);",
            "}"
        ],
        "description": "Merge Sort"
    },
    "Quick Sort": {
        "prefix": "cpp_quick_sort",
        "body": [
            "ll partition(v_ll &nums, ll l, ll r);",
            "void quick_sort(v_ll &nums, ll l, ll r);",
            "ll partition(v_ll &nums, ll l, ll r) {",
            "    // !T(N) = O(N)",
            "    // !S(N) = O(1)",
            "    ll p = r, i = l, j = r - 1;",
            "    while (i <= j) {",
            "        if (nums[i] <= nums[p]) {",
            "            i++;",
            "        } else {",
            "            swap(nums[i], nums[j]);",
            "            j--;",
            "        }",
            "    }",
            "    swap(nums[i], nums[p]);",
            "    return i;",
            "}",
            "void quick_sort(v_ll &nums, ll l, ll r) {",
            "    if (l >= r)",
            "        return;",
            "    ll p = partition(nums, l, r);",
            "    quick_sort(nums, l, p - 1);",
            "    quick_sort(nums, p + 1, r);",
            "}"
        ],
        "description": "Quick Sort"
    },
    "CPP Binary Tree": {
        "prefix": "cpp_binary_tree_int",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l, l> p_l;",
            "typedef pair<ul, ul> p_ul;",
            "typedef pair<ll, ll> p_ll;",
            "typedef pair<ull, ull> p_ull;",
            "typedef pair<int, int> p_int;",
            "typedef pair<uint, uint> p_uint;",
            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F        first",
            "#define S        second",
            "#define PB       push_back                         // for vector",
            "#define PPB      pop_back                          // for vector",
            "#define mod      1000000007                        // 1e9+7",
            "#define deb(x)   cout << #x << \" = \" << x << \"\\n\"  // for debugging",
            "#define deb2(x, y)                                        \\",
            "    cout << #x << \" = \" << x << \" , \" << #y << \" = \" << y \\",
            "         << \"\\n\"  // for debugging",
            "#define FOR(a, end, start) \\",
            "    for (int(a) = (start); (a) < (end); (a)++)  // regular for loop",
            "#define FOR_REV(a, end, start)             \\",
            "    for (int(a) = (end)-1; (a) >= (start); \\",
            "         (a)--)  // regular for loop decreasing",
            "",
            "class Node;",
            "",
            "// preorder build",
            "Node *preorder_build(v_ll &nums, int *i);",
            "Node *levelorder_build(v_ll &nums);",
            "void preorder_traversal(Node *root);",
            "void inorder_traversal(Node *root);",
            "void postorder_traversal(Node *root);",
            "void levelorder_traversal(Node *root);",
            "int height_of_tree(Node *root);",
            "",
            "int main() {",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "#ifndef ONLINE_JUDGE",
            "    freopen(\"input.txt\", \"r\", stdin);",
            "    freopen(\"output.txt\", \"w\", stdout);",
            "#endif",
            "    ll T, n;",
            "    cin >> T;",
            "    while (T) {",
            "        cin >> n;",
            "        v_ll nums(n);  // vector",
            "        FOR(i, n, 0) { cin >> nums[i]; }",
            "        Node *root = levelorder_build(nums);",
            "        nums.clear();",
            "        T--;",
            "    }",
            "    return 0;",
            "}",
            "",
            "class Node {",
            " public:",
            "    int data;",
            "    Node *right, *left;",
            "    Node(int data) {",
            "        this->data = data;",
            "        this->right = this->left = NULL;",
            "    }",
            "};",
            "",
            "Node *preorder_build(v_ll &nums, int *i) {",
            "    // * preorder build of a tree root-left-right",
            "    if (*i == nums.size() || nums[*i] == -1)",
            "        return NULL;",
            "    Node *root = new Node(nums[*i]);",
            "    *i += 1;",
            "    root->left = preorder_build(nums, i);",
            "    *i += 1;",
            "    root->right = preorder_build(nums, i);",
            "    return root;",
            "}",
            "",
            "void preorder_traversal(Node *root) {",
            "    // * left root right",
            "    if (!root) {",
            "        return;",
            "    }",
            "    cout << root->data << \" \";",
            "    preorder_traversal(root->left);",
            "    preorder_traversal(root->right);",
            "}",
            "",
            "void inorder_traversal(Node *root) {",
            "    // * left root right",
            "    if (!root) {",
            "        return;",
            "    }",
            "    inorder_traversal(root->left);",
            "    cout << root->data << \" \";",
            "    inorder_traversal(root->right);",
            "}",
            "",
            "void postorder_traversal(Node *root) {",
            "    // * left right root",
            "    if (!root)",
            "        return;",
            "    postorder_traversal(root->left);",
            "    postorder_traversal(root->right);",
            "    cout << root->data << \" \";",
            "}",
            "",
            "void levelorder_traversal(Node *root) {",
            "    // * we need breadth search",
            "    // we iterate over a queue",
            "    if (!root)",
            "        return;",
            "    queue<Node *> q;",
            "    q.push(root);",
            "    q.push(NULL);",
            "    while (!q.empty()) {",
            "        // pushing the children of the front of queue",
            "        if (!q.front()) {",
            "            q.pop();",
            "            NXT_LINE;",
            "            if (!q.empty())",
            "                q.push(NULL);",
            "            continue;",
            "        }",
            "        Node *front = q.front();",
            "        q.pop();",
            "        if (front->left)",
            "            q.push(front->left);",
            "        if (front->right)",
            "            q.push(front->right);",
            "        cout << front->data << \" \";",
            "    }",
            "}",
            "",
            "Node *levelorder_build(v_ll &nums) {",
            "    // iterative approach using queue",
            "    if (nums.size() == 0 || nums[0] == -1)",
            "        return NULL;",
            "    int i = 0;",
            "    Node *root = new Node(nums[0]);",
            "    queue<Node *> q;",
            "    q.push(root);",
            "    while (!q.empty()) {",
            "        Node *curr = q.front();",
            "        i++;",
            "        curr->left = nums[i] == -1 || i >= nums.size() ? NULL : new Node(nums[i]);",
            "        i++;",
            "        curr->right = nums[i] == -1 || i >= nums.size()? NULL : new Node(nums[i]);",
            "        if (curr->left)",
            "            q.push(curr->left);",
            "        if (curr->right)",
            "            q.push(curr->right);",
            "        q.pop();",
            "    }",
            "    return root;",
            "}",
            "",
            "int height_of_tree(Node *root) {",
            "    if (!root)",
            "        return 0;",
            "    return max(height_of_tree(root->left), height_of_tree(root->right)) + 1;",
            "}"
        ],
        "description": "CPP Binary Tree"
    },
    "Adj List ": {
        "prefix": "cpp_adj_list",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "typedef unsigned int uint;",
            "typedef long l;",
            "typedef unsigned long ul;",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "typedef vector<l> v_l;",
            "typedef vector<ul> v_ul;",
            "typedef vector<ll> v_ll;",
            "typedef vector<ull> v_ull;",
            "typedef vector<int> v_int;",
            "typedef vector<uint> v_uint;",
            "typedef pair<l, l> p_l;",
            "typedef pair<ul, ul> p_ul;",
            "typedef pair<ll, ll> p_ll;",
            "typedef pair<ull, ull> p_ull;",
            "typedef pair<int, int> p_int;",
            "typedef pair<uint, uint> p_uint;",
            "",
            "#define NXT_LINE cout << \"\\n\"",
            "#define EOL      '\\n'",
            "#define F        first",
            "#define S        second",
            "#define PB       push_back                         // for vector",
            "#define PPB      pop_back                          // for vector",
            "#define mod      1000000007                        // 1e9+7",
            "#define deb(x)   cout << #x << \" = \" << x << \"\\n\"  // for debugging",
            "#define deb2(x, y)                                        \\",
            "    cout << #x << \" = \" << x << \" , \" << #y << \" = \" << y \\",
            "         << \"\\n\"  // for debugging",
            "#define FOR(a, end, start) \\",
            "    for (int(a) = (start); (a) < (end); (a)++)  // regular for loop",
            "#define FOR_REV(a, end, start)             \\",
            "    for (int(a) = (end)-1; (a) >= (start); \\",
            "         (a)--)  // regular for loop decreasing",
            "",
            "void add_edge(v_int adj[], int i, int j);",
            "void print_graph(v_int adj[], int v);",
            "",
            "int main() {",
            "    ios_base::sync_with_stdio(false);",
            "    cin.tie(NULL);",
            "    cout.tie(NULL);",
            "    int v = 4;",
            "    v_int adj[v];",
            "    add_edge(adj, 0, 1);",
            "    add_edge(adj, 0, 2);",
            "    add_edge(adj, 1, 2);",
            "    add_edge(adj, 1, 3);",
            "    print_graph(adj, v);",
            "    return 0;",
            "}",
            "",
            "void add_edge(v_int adj[], int i, int j) {",
            "    adj[i].PB(j);",
            "    adj[j].PB(i);",
            "}",
            "void print_graph(v_int adj[], int v) {",
            "    FOR(i, v, 0) {",
            "        cout << i << \" : \";",
            "        for (int j = 0; j < adj[i].size(); j++) {",
            "            cout << adj[i][j] << \" \";",
            "        }",
            "        NXT_LINE;",
            "    }",
            "}"
        ],
        "description": "Adj List "
    }
}
